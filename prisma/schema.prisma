// datasource and generator setup
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ---------------------------------------------------------
//  ENUMS
// ---------------------------------------------------------

enum UserRole {
  STUDENT
  BROKER
  PARTNER
  ADMIN
  SUPER_ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

// ---------------------------------------------------------
//  MODEL
// ---------------------------------------------------------

model User {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String?
  phoneNumber  String?
  email        String     @unique
  password     String
  role         UserRole   @default(STUDENT)
  status       UserStatus @default(ACTIVE)
  profileImage String?

  otp       String?
  otpExpiry DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  brokers   Broker?
  partners  Partner?
  students  Student?
  admins    Admin?

  @@map("users")
}

model Broker {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email String @unique
  user  User   @relation(fields: [email], references: [email])

  agency        String?
  licenseNumber String?
  webHostedUrl  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("brokers")
}

model Partner {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  user  User   @relation(fields: [email], references: [email])

  companyName    String?
  companyAddress String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("partners")
}

model Student {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  studentId String @unique

  email String @unique
  user  User   @relation(fields: [email], references: [email])

  discordUsername String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("students")
}

model Admin {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email String @unique
  user  User   @relation(fields: [email], references: [email])

  adminId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}
